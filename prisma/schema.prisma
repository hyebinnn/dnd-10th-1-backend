// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_SEED_PUSH_MIGRATE_URL")
}

enum Role {
  Owner
  Participant
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  displayName  String
  profileImage String
  role         Role
  mbti         String?
  mbtiNickname String?

  // Relation - 1 : N 
  BlankTopicResult BlankTopicResult[]
  Room             Room?               @relation(fields: [roomId], references: [id])
  roomId           String?
}

// Table[room] : 방 정보 
model Room {
  id        String      @id @default(uuid())
  // NOTE: Table[room]의 id 는 uuid 형태로 결정 (roomCode = id)
  // ex. DNNV215SV
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  // Relation - 1 : 1
  Invite Invite?
  User   User[]
}

// Table[game_category] : 게임 카테고리 
model GameCategory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  gameTitle String

  // Relation - 1 : N
  GameBlankTopic GameBlankTopic[]
  GameMbti       GameMbti[]
  GameTopicGacha GameTopicGacha[]
}

// Table[game_blank_topic] : 빈칸 주제 게임
model GameBlankTopic {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  description String

  // Relation - N : 1
  gameCategory   GameCategory @relation(fields: [gameCategoryId], references: [id])
  gameCategoryId Int

  // Relation - 1 : N 
  BlankTopicResult BlankTopicResult[]
}

// Table[game_mbti] : mbti 게임
model GameMbti {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  mbtiNickname String
  description  String
  mbti         String @unique
  mbtiImage    String
  teamMbti     String
  teamMbtiImage  String

  // Relation - N : 1
  gameCategory   GameCategory @relation(fields: [gameCategoryId], references: [id])
  gameCategoryId Int

  // Relation - 1 : N
  MbtiMatching MbtiMatching[]
}

// NOTE : Mysql 의 string[] 타입 미지원으로 1:N 으로 테이블 분리
model MbtiMatching {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  matchingMbti String

  // Relation - N : 1
  gameMbti   GameMbti @relation(fields: [gameMbtiId], references: [id])
  gameMbtiId Int
}

// Table[blank_topic_result] : 빈칸 주제 게임 결과 저장
model BlankTopicResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  answer    String

  // Relation - N : 1 
  gameBlankTopic   GameBlankTopic @relation(fields: [gameBlankTopicId], references: [id])
  gameBlankTopicId Int
  user             User           @relation(fields: [userId], references: [id])
  userId           Int
}

// Table[invite] : 초대 링크 
model Invite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  url       String

  // Relation - 1 : 1 
  room   Room @relation(fields: [roomId], references: [id])
  roomId String  @unique
}

// Table[game_topic_gacha] : 주제 가챠
model GameTopicGacha {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  description String

  // Relation - N : 1
  gameCategory   GameCategory @relation(fields: [gameCategoryId], references: [id])
  gameCategoryId Int
}
